{"version":3,"file":"extension.js","mappings":"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","sources":["webpack://vscode-color-picker-change/./node_modules/color-name/index.js","webpack://vscode-color-picker-change/./node_modules/hex-rgb/index.js","webpack://vscode-color-picker-change/./node_modules/parse-css-color/dist/index.esm.js","webpack://vscode-color-picker-change/./src/color.js","webpack://vscode-color-picker-change/external commonjs \"vscode\"","webpack://vscode-color-picker-change/webpack/bootstrap","webpack://vscode-color-picker-change/webpack/runtime/compat get default export","webpack://vscode-color-picker-change/webpack/runtime/define property getters","webpack://vscode-color-picker-change/webpack/runtime/hasOwnProperty shorthand","webpack://vscode-color-picker-change/webpack/runtime/make namespace object","webpack://vscode-color-picker-change/./src/extension.ts"],"sourcesContent":["'use strict'\r\n\r\nmodule.exports = {\r\n\t\"aliceblue\": [240, 248, 255],\r\n\t\"antiquewhite\": [250, 235, 215],\r\n\t\"aqua\": [0, 255, 255],\r\n\t\"aquamarine\": [127, 255, 212],\r\n\t\"azure\": [240, 255, 255],\r\n\t\"beige\": [245, 245, 220],\r\n\t\"bisque\": [255, 228, 196],\r\n\t\"black\": [0, 0, 0],\r\n\t\"blanchedalmond\": [255, 235, 205],\r\n\t\"blue\": [0, 0, 255],\r\n\t\"blueviolet\": [138, 43, 226],\r\n\t\"brown\": [165, 42, 42],\r\n\t\"burlywood\": [222, 184, 135],\r\n\t\"cadetblue\": [95, 158, 160],\r\n\t\"chartreuse\": [127, 255, 0],\r\n\t\"chocolate\": [210, 105, 30],\r\n\t\"coral\": [255, 127, 80],\r\n\t\"cornflowerblue\": [100, 149, 237],\r\n\t\"cornsilk\": [255, 248, 220],\r\n\t\"crimson\": [220, 20, 60],\r\n\t\"cyan\": [0, 255, 255],\r\n\t\"darkblue\": [0, 0, 139],\r\n\t\"darkcyan\": [0, 139, 139],\r\n\t\"darkgoldenrod\": [184, 134, 11],\r\n\t\"darkgray\": [169, 169, 169],\r\n\t\"darkgreen\": [0, 100, 0],\r\n\t\"darkgrey\": [169, 169, 169],\r\n\t\"darkkhaki\": [189, 183, 107],\r\n\t\"darkmagenta\": [139, 0, 139],\r\n\t\"darkolivegreen\": [85, 107, 47],\r\n\t\"darkorange\": [255, 140, 0],\r\n\t\"darkorchid\": [153, 50, 204],\r\n\t\"darkred\": [139, 0, 0],\r\n\t\"darksalmon\": [233, 150, 122],\r\n\t\"darkseagreen\": [143, 188, 143],\r\n\t\"darkslateblue\": [72, 61, 139],\r\n\t\"darkslategray\": [47, 79, 79],\r\n\t\"darkslategrey\": [47, 79, 79],\r\n\t\"darkturquoise\": [0, 206, 209],\r\n\t\"darkviolet\": [148, 0, 211],\r\n\t\"deeppink\": [255, 20, 147],\r\n\t\"deepskyblue\": [0, 191, 255],\r\n\t\"dimgray\": [105, 105, 105],\r\n\t\"dimgrey\": [105, 105, 105],\r\n\t\"dodgerblue\": [30, 144, 255],\r\n\t\"firebrick\": [178, 34, 34],\r\n\t\"floralwhite\": [255, 250, 240],\r\n\t\"forestgreen\": [34, 139, 34],\r\n\t\"fuchsia\": [255, 0, 255],\r\n\t\"gainsboro\": [220, 220, 220],\r\n\t\"ghostwhite\": [248, 248, 255],\r\n\t\"gold\": [255, 215, 0],\r\n\t\"goldenrod\": [218, 165, 32],\r\n\t\"gray\": [128, 128, 128],\r\n\t\"green\": [0, 128, 0],\r\n\t\"greenyellow\": [173, 255, 47],\r\n\t\"grey\": [128, 128, 128],\r\n\t\"honeydew\": [240, 255, 240],\r\n\t\"hotpink\": [255, 105, 180],\r\n\t\"indianred\": [205, 92, 92],\r\n\t\"indigo\": [75, 0, 130],\r\n\t\"ivory\": [255, 255, 240],\r\n\t\"khaki\": [240, 230, 140],\r\n\t\"lavender\": [230, 230, 250],\r\n\t\"lavenderblush\": [255, 240, 245],\r\n\t\"lawngreen\": [124, 252, 0],\r\n\t\"lemonchiffon\": [255, 250, 205],\r\n\t\"lightblue\": [173, 216, 230],\r\n\t\"lightcoral\": [240, 128, 128],\r\n\t\"lightcyan\": [224, 255, 255],\r\n\t\"lightgoldenrodyellow\": [250, 250, 210],\r\n\t\"lightgray\": [211, 211, 211],\r\n\t\"lightgreen\": [144, 238, 144],\r\n\t\"lightgrey\": [211, 211, 211],\r\n\t\"lightpink\": [255, 182, 193],\r\n\t\"lightsalmon\": [255, 160, 122],\r\n\t\"lightseagreen\": [32, 178, 170],\r\n\t\"lightskyblue\": [135, 206, 250],\r\n\t\"lightslategray\": [119, 136, 153],\r\n\t\"lightslategrey\": [119, 136, 153],\r\n\t\"lightsteelblue\": [176, 196, 222],\r\n\t\"lightyellow\": [255, 255, 224],\r\n\t\"lime\": [0, 255, 0],\r\n\t\"limegreen\": [50, 205, 50],\r\n\t\"linen\": [250, 240, 230],\r\n\t\"magenta\": [255, 0, 255],\r\n\t\"maroon\": [128, 0, 0],\r\n\t\"mediumaquamarine\": [102, 205, 170],\r\n\t\"mediumblue\": [0, 0, 205],\r\n\t\"mediumorchid\": [186, 85, 211],\r\n\t\"mediumpurple\": [147, 112, 219],\r\n\t\"mediumseagreen\": [60, 179, 113],\r\n\t\"mediumslateblue\": [123, 104, 238],\r\n\t\"mediumspringgreen\": [0, 250, 154],\r\n\t\"mediumturquoise\": [72, 209, 204],\r\n\t\"mediumvioletred\": [199, 21, 133],\r\n\t\"midnightblue\": [25, 25, 112],\r\n\t\"mintcream\": [245, 255, 250],\r\n\t\"mistyrose\": [255, 228, 225],\r\n\t\"moccasin\": [255, 228, 181],\r\n\t\"navajowhite\": [255, 222, 173],\r\n\t\"navy\": [0, 0, 128],\r\n\t\"oldlace\": [253, 245, 230],\r\n\t\"olive\": [128, 128, 0],\r\n\t\"olivedrab\": [107, 142, 35],\r\n\t\"orange\": [255, 165, 0],\r\n\t\"orangered\": [255, 69, 0],\r\n\t\"orchid\": [218, 112, 214],\r\n\t\"palegoldenrod\": [238, 232, 170],\r\n\t\"palegreen\": [152, 251, 152],\r\n\t\"paleturquoise\": [175, 238, 238],\r\n\t\"palevioletred\": [219, 112, 147],\r\n\t\"papayawhip\": [255, 239, 213],\r\n\t\"peachpuff\": [255, 218, 185],\r\n\t\"peru\": [205, 133, 63],\r\n\t\"pink\": [255, 192, 203],\r\n\t\"plum\": [221, 160, 221],\r\n\t\"powderblue\": [176, 224, 230],\r\n\t\"purple\": [128, 0, 128],\r\n\t\"rebeccapurple\": [102, 51, 153],\r\n\t\"red\": [255, 0, 0],\r\n\t\"rosybrown\": [188, 143, 143],\r\n\t\"royalblue\": [65, 105, 225],\r\n\t\"saddlebrown\": [139, 69, 19],\r\n\t\"salmon\": [250, 128, 114],\r\n\t\"sandybrown\": [244, 164, 96],\r\n\t\"seagreen\": [46, 139, 87],\r\n\t\"seashell\": [255, 245, 238],\r\n\t\"sienna\": [160, 82, 45],\r\n\t\"silver\": [192, 192, 192],\r\n\t\"skyblue\": [135, 206, 235],\r\n\t\"slateblue\": [106, 90, 205],\r\n\t\"slategray\": [112, 128, 144],\r\n\t\"slategrey\": [112, 128, 144],\r\n\t\"snow\": [255, 250, 250],\r\n\t\"springgreen\": [0, 255, 127],\r\n\t\"steelblue\": [70, 130, 180],\r\n\t\"tan\": [210, 180, 140],\r\n\t\"teal\": [0, 128, 128],\r\n\t\"thistle\": [216, 191, 216],\r\n\t\"tomato\": [255, 99, 71],\r\n\t\"turquoise\": [64, 224, 208],\r\n\t\"violet\": [238, 130, 238],\r\n\t\"wheat\": [245, 222, 179],\r\n\t\"white\": [255, 255, 255],\r\n\t\"whitesmoke\": [245, 245, 245],\r\n\t\"yellow\": [255, 255, 0],\r\n\t\"yellowgreen\": [154, 205, 50]\r\n};\r\n","'use strict';\n\nconst hexCharacters = 'a-f\\\\d';\nconst match3or4Hex = `#?[${hexCharacters}]{3}[${hexCharacters}]?`;\nconst match6or8Hex = `#?[${hexCharacters}]{6}([${hexCharacters}]{2})?`;\nconst nonHexChars = new RegExp(`[^#${hexCharacters}]`, 'gi');\nconst validHexSize = new RegExp(`^${match3or4Hex}$|^${match6or8Hex}$`, 'i');\n\nmodule.exports = (hex, options = {}) => {\n\tif (typeof hex !== 'string' || nonHexChars.test(hex) || !validHexSize.test(hex)) {\n\t\tthrow new TypeError('Expected a valid hex string');\n\t}\n\n\thex = hex.replace(/^#/, '');\n\tlet alphaFromHex = 1;\n\n\tif (hex.length === 8) {\n\t\talphaFromHex = Number.parseInt(hex.slice(6, 8), 16) / 255;\n\t\thex = hex.slice(0, 6);\n\t}\n\n\tif (hex.length === 4) {\n\t\talphaFromHex = Number.parseInt(hex.slice(3, 4).repeat(2), 16) / 255;\n\t\thex = hex.slice(0, 3);\n\t}\n\n\tif (hex.length === 3) {\n\t\thex = hex[0] + hex[0] + hex[1] + hex[1] + hex[2] + hex[2];\n\t}\n\n\tconst number = Number.parseInt(hex, 16);\n\tconst red = number >> 16;\n\tconst green = (number >> 8) & 255;\n\tconst blue = number & 255;\n\tconst alpha = typeof options.alpha === 'number' ? options.alpha : alphaFromHex;\n\n\tif (options.format === 'array') {\n\t\treturn [red, green, blue, alpha];\n\t}\n\n\tif (options.format === 'css') {\n\t\tconst alphaString = alpha === 1 ? '' : ` / ${Number((alpha * 100).toFixed(2))}%`;\n\t\treturn `rgb(${red} ${green} ${blue}${alphaString})`;\n\t}\n\n\treturn {red, green, blue, alpha};\n};\n","import colorName from 'color-name';\nimport hex2Rgb from 'hex-rgb';\n\nconst pattern = /^#([a-f0-9]{3,4}|[a-f0-9]{4}(?:[a-f0-9]{2}){1,2})\\b$/;\nvar hexRe = new RegExp(pattern, 'i');\n\nconst float = '-?\\\\d*(?:\\\\.\\\\d+)';\n\nconst number = `(${float}?)`;\nconst percentage = `(${float}?%)`;\nconst numberOrPercentage = `(${float}?%?)`;\n\nconst pattern$1 = `^\n  hsla?\\\\(\n    \\\\s*(-?\\\\d*(?:\\\\.\\\\d+)?(?:deg|rad|turn)?)\\\\s*,\n    \\\\s*${percentage}\\\\s*,\n    \\\\s*${percentage}\\\\s*\n    (?:,\\\\s*${numberOrPercentage}\\\\s*)?\n  \\\\)\n  $\n`.replace(/\\n|\\s/g, '');\n\nvar hsl3Re = new RegExp(pattern$1);\n\nconst pattern$2 = `^\n  hsla?\\\\(\n    \\\\s*(-?\\\\d*(?:\\\\.\\\\d+)?(?:deg|rad|turn)?)\\\\s*\n    \\\\s+${percentage}\n    \\\\s+${percentage}\n    \\\\s*(?:\\\\s*\\\\/\\\\s*${numberOrPercentage}\\\\s*)?\n  \\\\)\n  $\n`.replace(/\\n|\\s/g, '');\n\nvar hsl4Re = new RegExp(pattern$2);\n\nconst pattern$3 = `^\n  rgba?\\\\(\n    \\\\s*${number}\\\\s*,\n    \\\\s*${number}\\\\s*,\n    \\\\s*${number}\\\\s*\n    (?:,\\\\s*${numberOrPercentage}\\\\s*)?\n  \\\\)\n  $\n`.replace(/\\n|\\s/g, '');\n\nvar rgb3NumberRe = new RegExp(pattern$3);\n\nconst pattern$4 = `^\n  rgba?\\\\(\n    \\\\s*${percentage}\\\\s*,\n    \\\\s*${percentage}\\\\s*,\n    \\\\s*${percentage}\\\\s*\n    (?:,\\\\s*${numberOrPercentage}\\\\s*)?\n  \\\\)\n  $\n`.replace(/\\n|\\s/g, '');\n\nvar rgb3PercentageRe = new RegExp(pattern$4);\n\nconst pattern$5 = `^\n  rgba?\\\\(\n    \\\\s*${number}\n    \\\\s+${number}\n    \\\\s+${number}\n    \\\\s*(?:\\\\s*\\\\/\\\\s*${numberOrPercentage}\\\\s*)?\n  \\\\)\n$\n`.replace(/\\n|\\s/g, '');\n\nvar rgb4NumberRe = new RegExp(pattern$5);\n\nconst pattern$6 = `^\n  rgba?\\\\(\n    \\\\s*${percentage}\n    \\\\s+${percentage}\n    \\\\s+${percentage}\n    \\\\s*(?:\\\\s*\\\\/\\\\s*${numberOrPercentage}\\\\s*)?\n  \\\\)\n$\n`.replace(/\\n|\\s/g, '');\n\nvar rgb4PercentageRe = new RegExp(pattern$6);\n\nconst pattern$7 = /^transparent$/;\nvar transparentRe = new RegExp(pattern$7, 'i');\n\nconst clamp = (num, min, max) => Math.min(Math.max(min, num), max);\n\n/* 500 => 255, -10 => 0, 128 => 128 */\nconst parseRGB = (num) => {\n  let n = num;\n  if (typeof n !== 'number') n = n.endsWith('%') ? (parseFloat(n) * 255) / 100 : parseFloat(n);\n  return clamp(Math.round(n), 0, 255);\n};\n\n/* 200 => 100, -100 => 0, 50 => 50 */\nconst parsePercentage = (percentage) => clamp(parseFloat(percentage), 0, 100);\n\n/* '50%' => 5.0, 200 => 1, -10 => 0 */\nfunction parseAlpha(alpha) {\n  let a = alpha;\n  if (typeof a !== 'number') a = a.endsWith('%') ? parseFloat(a) / 100 : parseFloat(a);\n  return clamp(a, 0, 1);\n}\n\nfunction getHEX(hex) {\n  const [r, g, b, a] = hex2Rgb(hex, { format: 'array' });\n  return getRGB([null, ...[r, g, b, a]]);\n}\n\nfunction getHSL([, h, s, l, a = 1]) {\n  let hh = h;\n  if (hh.endsWith('turn')) {\n    hh = (parseFloat(hh) * 360) / 1;\n  } else if (hh.endsWith('rad')) {\n    hh = Math.round((parseFloat(hh) * 180) / Math.PI);\n  } else {\n    hh = parseFloat(hh);\n  }\n  return {\n    type: 'hsl',\n    values: [hh, parsePercentage(s), parsePercentage(l)],\n    alpha: parseAlpha(a === null ? 1 : a)\n  };\n}\n\nfunction getRGB([, r, g, b, a = 1]) {\n  return {\n    type: 'rgb',\n    values: [r, g, b].map(parseRGB),\n    alpha: parseAlpha(a === null ? 1 : a)\n  };\n}\n\n/**\n * parse-css-color\n * @version v0.2.1\n * @link http://github.com/noeldelgado/parse-css-color/\n * @license MIT\n */\n\nconst parseCSSColor = (str) => {\n  if (typeof str !== 'string') return null;\n\n  const hex = hexRe.exec(str);\n  if (hex) return getHEX(hex[0]);\n\n  const hsl = hsl4Re.exec(str) || hsl3Re.exec(str);\n  if (hsl) return getHSL(hsl);\n\n  const rgb =\n    rgb4NumberRe.exec(str) ||\n    rgb4PercentageRe.exec(str) ||\n    rgb3NumberRe.exec(str) ||\n    rgb3PercentageRe.exec(str);\n  if (rgb) return getRGB(rgb);\n\n  if (transparentRe.exec(str)) return getRGB([null, 0, 0, 0, 0]);\n\n  const cn = colorName[str.toLowerCase()];\n  if (cn) return getRGB([null, cn[0], cn[1], cn[2], 1]);\n\n  return null;\n};\n\nexport default parseCSSColor;\n","\"use-strict\"\r\n\r\n\r\n\r\n\r\n/**\r\n * \r\n * @param {Any} value \r\n * @param {type} type \r\n */\r\nfunction tc(value, type) {\r\n    if(!(typeof value == type)) throw new TypeError(`required type ${type} got ${typeof value}`);\r\n    return value\r\n}\r\n\r\nfunction ic(value, type) {\r\n    if(! value instanceof type) throw new TypeError(`required type ${type} got ${typeof value}`);\r\n    return value\r\n}\r\n\r\nfunction nc(value) {\r\n    if(isNaN(value)) return 0;\r\n    return value;\r\n}\r\n\r\nfunction oc(options) {\r\n    const new_options = {\r\n        angle: options ? (options.angle ? options.angle : 15) : 15,\r\n        results: options ? (options.results ? options.results : 3) : 3,\r\n    }\r\n    return new_options\r\n}\r\n\r\nfunction clmp(value, max, min) {\r\n    if(min !== undefined && value < min) {\r\n        return min;\r\n    }\r\n    if(value > max) {\r\n        return max;\r\n    }\r\n    return value;\r\n}\r\n\r\nfunction shift(h, angle){\r\n    h += angle;\r\n    while (h >= 360.0) h -= 360.0;\r\n    while (h < 0.0) h += 360.0;\r\n    return h;\r\n}\r\n\r\nclass Color {\r\n\r\n    \r\n    \r\n    #red;\r\n    #green;\r\n    #blue;\r\n\r\n    //#region color names\r\n\r\n    static Colors = class {\r\n        static get BLACK() { return Color.fromHex(\"#000000\"); }\r\n        static get SILVER() { return Color.fromHex(\"#c0c0c0\"); }\r\n        static get GRAY() { return Color.fromHex(\"#808080\"); }\r\n        static get WHITE() { return Color.fromHex(\"#ffffff\"); }\r\n        static get MAROON() { return Color.fromHex(\"#800000\"); }\r\n        static get RED() { return Color.fromHex(\"#ff0000\"); }\r\n        static get PURPLE() { return Color.fromHex(\"#800080\"); }\r\n        static get FUCHSIA() { return Color.fromHex(\"#ff00ff\"); }\r\n        static get GREEN() { return Color.fromHex(\"#008000\"); }\r\n        static get LIME() { return Color.fromHex(\"#00ff00\"); }\r\n        static get OLIVE() { return Color.fromHex(\"#808000\"); }\r\n        static get YELLOW() { return Color.fromHex(\"#ffff00\"); }\r\n        static get NAVY() { return Color.fromHex(\"#000080\"); }\r\n        static get BLUE() { return Color.fromHex(\"#0000ff\"); }\r\n        static get TEAL() { return Color.fromHex(\"#008080\"); }\r\n        static get AQUA() { return Color.fromHex(\"#00ffff\"); }\r\n        static get ORANGE() { return Color.fromHex(\"#ffa500\"); }\r\n        static get ALICEBLUE() { return Color.fromHex(\"#f0f8ff\"); }\r\n        static get ANTIQUEWHITE() { return Color.fromHex(\"#faebd7\"); }\r\n        static get AQUAMARINE() { return Color.fromHex(\"#7fffd4\"); }\r\n        static get AZURE() { return Color.fromHex(\"#f0ffff\"); }\r\n        static get BEIGE() { return Color.fromHex(\"#f5f5dc\"); }\r\n        static get BISQUE() { return Color.fromHex(\"#ffe4c4\"); }\r\n        static get BLANCHEDALMOND() { return Color.fromHex(\"#ffebcd\"); }\r\n        static get BLUEVIOLET() { return Color.fromHex(\"#8a2be2\"); }\r\n        static get BROWN() { return Color.fromHex(\"#a52a2a\"); }\r\n        static get BURLYWOOD() { return Color.fromHex(\"#deb887\"); }\r\n        static get CADETBLUE() { return Color.fromHex(\"#5f9ea0\"); }\r\n        static get CHARTREUSE() { return Color.fromHex(\"#7fff00\"); }\r\n        static get CHOCOLATE() { return Color.fromHex(\"#d2691e\"); }\r\n        static get CORAL() { return Color.fromHex(\"#ff7f50\"); }\r\n        static get CORNFLOWERBLUE() { return Color.fromHex(\"#6495ed\"); }\r\n        static get CORNSILK() { return Color.fromHex(\"#fff8dc\"); }\r\n        static get CRIMSON() { return Color.fromHex(\"#dc143c\"); }\r\n        static get CYAN() { return Color.fromHex(\"#00ffff\"); }\r\n        static get DARKBLUE() { return Color.fromHex(\"#00008b\"); }\r\n        static get DARKCYAN() { return Color.fromHex(\"#008b8b\"); }\r\n        static get DARKGOLDENROD() { return Color.fromHex(\"#b8860b\"); }\r\n        static get DARKGRAY() { return Color.fromHex(\"#a9a9a9\"); }\r\n        static get DARKGREEN() { return Color.fromHex(\"#006400\"); }\r\n        static get DARKGREY() { return Color.fromHex(\"#a9a9a9\"); }\r\n        static get DARKKHAKI() { return Color.fromHex(\"#bdb76b\"); }\r\n        static get DARKMAGENTA() { return Color.fromHex(\"#8b008b\"); }\r\n        static get DARKOLIVEGREEN() { return Color.fromHex(\"#556b2f\"); }\r\n        static get DARKORANGE() { return Color.fromHex(\"#ff8c00\"); }\r\n        static get DARKORCHID() { return Color.fromHex(\"#9932cc\"); }\r\n        static get DARKRED() { return Color.fromHex(\"#8b0000\"); }\r\n        static get DARKSALMON() { return Color.fromHex(\"#e9967a\"); }\r\n        static get DARKSEAGREEN() { return Color.fromHex(\"#8fbc8f\"); }\r\n        static get DARKSLATEBLUE() { return Color.fromHex(\"#483d8b\"); }\r\n        static get DARKSLATEGRAY() { return Color.fromHex(\"#2f4f4f\"); }\r\n        static get DARKSLATEGREY() { return Color.fromHex(\"#2f4f4f\"); }\r\n        static get DARKTURQUOISE() { return Color.fromHex(\"#00ced1\"); }\r\n        static get DARKVIOLET() { return Color.fromHex(\"#9400d3\"); }\r\n        static get DEEPPINK() { return Color.fromHex(\"#ff1493\"); }\r\n        static get DEEPSKYBLUE() { return Color.fromHex(\"#00bfff\"); }\r\n        static get DIMGRAY() { return Color.fromHex(\"#696969\"); }\r\n        static get DIMGREY() { return Color.fromHex(\"#696969\"); }\r\n        static get DODGERBLUE() { return Color.fromHex(\"#1e90ff\"); }\r\n        static get FIREBRICK() { return Color.fromHex(\"#b22222\"); }\r\n        static get FLORALWHITE() { return Color.fromHex(\"#fffaf0\"); }\r\n        static get FORESTGREEN() { return Color.fromHex(\"#228b22\"); }\r\n        static get GAINSBORO() { return Color.fromHex(\"#dcdcdc\"); }\r\n        static get GHOSTWHITE() { return Color.fromHex(\"#f8f8ff\"); }\r\n        static get GOLD() { return Color.fromHex(\"#ffd700\"); }\r\n        static get GOLDENROD() { return Color.fromHex(\"#daa520\"); }\r\n        static get GREENYELLOW() { return Color.fromHex(\"#adff2f\"); }\r\n        static get GREY() { return Color.fromHex(\"#808080\"); }\r\n        static get HONEYDEW() { return Color.fromHex(\"#f0fff0\"); }\r\n        static get HOTPINK() { return Color.fromHex(\"#ff69b4\"); }\r\n        static get INDIANRED() { return Color.fromHex(\"#cd5c5c\"); }\r\n        static get INDIGO() { return Color.fromHex(\"#4b0082\"); }\r\n        static get IVORY() { return Color.fromHex(\"#fffff0\"); }\r\n        static get KHAKI() { return Color.fromHex(\"#f0e68c\"); }\r\n        static get LAVENDER() { return Color.fromHex(\"#e6e6fa\"); }\r\n        static get LAVENDERBLUSH() { return Color.fromHex(\"#fff0f5\"); }\r\n        static get LAWNGREEN() { return Color.fromHex(\"#7cfc00\"); }\r\n        static get LEMONCHIFFON() { return Color.fromHex(\"#fffacd\"); }\r\n        static get LIGHTBLUE() { return Color.fromHex(\"#add8e6\"); }\r\n        static get LIGHTCORAL() { return Color.fromHex(\"#f08080\"); }\r\n        static get LIGHTCYAN() { return Color.fromHex(\"#e0ffff\"); }\r\n        static get LIGHTGOLDENRODYELLOW() { return Color.fromHex(\"#fafad2\"); }\r\n        static get LIGHTGRAY() { return Color.fromHex(\"#d3d3d3\"); }\r\n        static get LIGHTGREEN() { return Color.fromHex(\"#90ee90\"); }\r\n        static get LIGHTGREY() { return Color.fromHex(\"#d3d3d3\"); }\r\n        static get LIGHTPINK() { return Color.fromHex(\"#ffb6c1\"); }\r\n        static get LIGHTSALMON() { return Color.fromHex(\"#ffa07a\"); }\r\n        static get LIGHTSEAGREEN() { return Color.fromHex(\"#20b2aa\"); }\r\n        static get LIGHTSKYBLUE() { return Color.fromHex(\"#87cefa\"); }\r\n        static get LIGHTSLATEGRAY() { return Color.fromHex(\"#778899\"); }\r\n        static get LIGHTSLATEGREY() { return Color.fromHex(\"#778899\"); }\r\n        static get LIGHTSTEELBLUE() { return Color.fromHex(\"#b0c4de\"); }\r\n        static get LIGHTYELLOW() { return Color.fromHex(\"#ffffe0\"); }\r\n        static get LIMEGREEN() { return Color.fromHex(\"#32cd32\"); }\r\n        static get LINEN() { return Color.fromHex(\"#faf0e6\"); }\r\n        static get MAGENTA() { return Color.fromHex(\"#ff00ff\"); }\r\n        static get FUCHSIA() { return Color.fromHex(\"#ff00ff\"); }\r\n        static get MEDIUMAQUAMARINE() { return Color.fromHex(\"#66cdaa\"); }\r\n        static get MEDIUMBLUE() { return Color.fromHex(\"#0000cd\"); }\r\n        static get MEDIUMORCHID() { return Color.fromHex(\"#ba55d3\"); }\r\n        static get MEDIUMPURPLE() { return Color.fromHex(\"#9370db\"); }\r\n        static get MEDIUMSEAGREEN() { return Color.fromHex(\"#3cb371\"); }\r\n        static get MEDIUMSLATEBLUE() { return Color.fromHex(\"#7b68ee\"); }\r\n        static get MEDIUMSPRINGGREEN() { return Color.fromHex(\"#00fa9a\"); }\r\n        static get MEDIUMTURQUOISE() { return Color.fromHex(\"#48d1cc\"); }\r\n        static get MEDIUMVIOLETRED() { return Color.fromHex(\"#c71585\"); }\r\n        static get MIDNIGHTBLUE() { return Color.fromHex(\"#191970\"); }\r\n        static get MINTCREAM() { return Color.fromHex(\"#f5fffa\"); }\r\n        static get MISTYROSE() { return Color.fromHex(\"#ffe4e1\"); }\r\n        static get MOCCASIN() { return Color.fromHex(\"#ffe4b5\"); }\r\n        static get NAVAJOWHITE() { return Color.fromHex(\"#ffdead\"); }\r\n        static get OLDLACE() { return Color.fromHex(\"#fdf5e6\"); }\r\n        static get OLIVEDRAB() { return Color.fromHex(\"#6b8e23\"); }\r\n        static get ORANGERED() { return Color.fromHex(\"#ff4500\"); }\r\n        static get ORCHID() { return Color.fromHex(\"#da70d6\"); }\r\n        static get PALEGOLDENROD() { return Color.fromHex(\"#eee8aa\"); }\r\n        static get PALEGREEN() { return Color.fromHex(\"#98fb98\"); }\r\n        static get PALETURQUOISE() { return Color.fromHex(\"#afeeee\"); }\r\n        static get PALEVIOLETRED() { return Color.fromHex(\"#db7093\"); }\r\n        static get PAPAYAWHIP() { return Color.fromHex(\"#ffefd5\"); }\r\n        static get PEACHPUFF() { return Color.fromHex(\"#ffdab9\"); }\r\n        static get PERU() { return Color.fromHex(\"#cd853f\"); }\r\n        static get PINK() { return Color.fromHex(\"#ffc0cb\"); }\r\n        static get PLUM() { return Color.fromHex(\"#dda0dd\"); }\r\n        static get POWDERBLUE() { return Color.fromHex(\"#b0e0e6\"); }\r\n        static get ROSYBROWN() { return Color.fromHex(\"#bc8f8f\"); }\r\n        static get ROYALBLUE() { return Color.fromHex(\"#4169e1\"); }\r\n        static get SADDLEBROWN() { return Color.fromHex(\"#8b4513\"); }\r\n        static get SALMON() { return Color.fromHex(\"#fa8072\"); }\r\n        static get SANDYBROWN() { return Color.fromHex(\"#f4a460\"); }\r\n        static get SEAGREEN() { return Color.fromHex(\"#2e8b57\"); }\r\n        static get SEASHELL() { return Color.fromHex(\"#fff5ee\"); }\r\n        static get SIENNA() { return Color.fromHex(\"#a0522d\"); }\r\n        static get SKYBLUE() { return Color.fromHex(\"#87ceeb\"); }\r\n        static get SLATEBLUE() { return Color.fromHex(\"#6a5acd\"); }\r\n        static get SLATEGRAY() { return Color.fromHex(\"#708090\"); }\r\n        static get SLATEGREY() { return Color.fromHex(\"#708090\"); }\r\n        static get SNOW() { return Color.fromHex(\"#fffafa\"); }\r\n        static get SPRINGGREEN() { return Color.fromHex(\"#00ff7f\"); }\r\n        static get STEELBLUE() { return Color.fromHex(\"#4682b4\"); }\r\n        static get TAN() { return Color.fromHex(\"#d2b48c\"); }\r\n        static get THISTLE() { return Color.fromHex(\"#d8bfd8\"); }\r\n        static get TOMATO() { return Color.fromHex(\"#ff6347\"); }\r\n        static get TURQUOISE() { return Color.fromHex(\"#40e0d0\"); }\r\n        static get VIOLET() { return Color.fromHex(\"#ee82ee\"); }\r\n        static get WHEAT() { return Color.fromHex(\"#f5deb3\"); }\r\n        static get WHITESMOKE() { return Color.fromHex(\"#f5f5f5\"); }\r\n        static get YELLOWGREEN() { return Color.fromHex(\"#9acd32\"); }\r\n        static get REBECCAPURPLE() { return Color.fromHex(\"#663399\"); }\r\n        \r\n       \r\n    }\r\n    \r\n    //#endregion color names\r\n\r\n    //#region scheme\r\n\r\n    getScheme(name, options) {\r\n        return Color.createScheme(this, name, options)\r\n    }\r\n\r\n    static getScheme(color, name, options) {\r\n        return Color.createScheme(color, name, options)\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param {Color} color \r\n     * @param {Object} options \r\n     * @returns Color[]\r\n     */\r\n    static monochromatic(color, options){\r\n        ic(color, Color);\r\n        let results = oc(options).results || 3;\r\n        let hsv = Color.toHsv(color);\r\n        let h = hsv.h,\r\n            s = hsv.s,\r\n            v = hsv.v / 100;\r\n        let result = [];\r\n        let mod = 1 / results;\r\n\r\n\r\n        while (results--) {\r\n            result.push(Color.fromHsv(h, s, clmp(v * 100, 100, 0)));\r\n            v = (v - mod) % 1;\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    monochromatic(options) {\r\n        return Color.monochromatic(this, options);\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param {Color} color \r\n     * @returns Color\r\n     */\r\n    static complementary(color){\r\n        ic(color, Color);\r\n        let hsl = Color.toHsl(color);\r\n        let h = hsl.h,\r\n            s = hsl.s,\r\n            l = hsl.l;\r\n        \r\n        return Color.fromHsl(shift(h, 180), s, l)\r\n\r\n    }\r\n\r\n    complementary() {\r\n        return Color.complementary(this);\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param {Color} color \r\n     * @param {Object} options\r\n     * @returns Color[3]\r\n     */\r\n    static splitComplementary(color, options){\r\n        ic(color, Color);\r\n        let hsl = Color.toHsl(color);\r\n        let angle = oc(options).angle || 15;\r\n        let h = hsl.h,\r\n            s = hsl.s,\r\n            l = hsl.l;\r\n        \r\n        const result = [\r\n            color,\r\n            Color.fromHsl(shift(h, 180 + angle), s, l),\r\n            Color.fromHsl(shift(h, 180 - angle), s, l),\r\n        ]\r\n\r\n        return result;\r\n\r\n    }\r\n\r\n    splitComplementary(options) {\r\n        return Color.splitComplementary(this, options);\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param {Color} color \r\n     * @param {Object} options\r\n     * @returns Color[4]\r\n    */\r\n    static doubleComplementary(color, options) {\r\n        ic(color, Color);\r\n        let hsl = Color.toHsl(color);\r\n        let angle = oc(options).angle || 15;\r\n        let h = hsl.h,\r\n            s = hsl.s,\r\n            l = hsl.l;\r\n        const result = [\r\n            color,\r\n            Color.fromHsl(shift(h, 180), s, l),\r\n            Color.fromHsl(shift(h, angle), s, l),\r\n            Color.fromHsl(shift(h, 180 + angle), s, l),\r\n        ]\r\n        return result\r\n    }\r\n\r\n    doubleComplementary(options) {\r\n        return Color.doubleComplementary(this, options)\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param {Color} color \r\n     * @returns Color[4]\r\n    */\r\n    static square(color) {\r\n        ic(color, Color);\r\n        let hsl = Color.toHsl(color);\r\n        let h = hsl.h,\r\n            s = hsl.s,\r\n            l = hsl.l;\r\n        const result = [ color ]\r\n\r\n        for (let i = 1; i < 4; i++) {\r\n            h = shift(h, 90);\r\n            result.push(Color.fromHsl(h, s, l));\r\n        }\r\n\r\n        return result\r\n    }\r\n\r\n    square() {\r\n        return Color.square(this)\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param {Color} color \r\n     * @param {Object} options\r\n     * @returns Color[4]\r\n    */\r\n    static tetradic(color, options) {\r\n        ic(color, Color);\r\n        let hsl = Color.toHsl(color);\r\n        let angle = oc(options).angle;\r\n        let h = hsl.h,\r\n            s = hsl.s,\r\n            l = hsl.l;\r\n        return [\r\n            color, \r\n            Color.fromHsl(shift(h, 180), s, l),\r\n            Color.fromHsl(shift(h, 180 - angle), s, l),\r\n            Color.fromHsl(shift(h, -angle), s, l)\r\n        ]\r\n    }\r\n\r\n    tetradic(options) {\r\n        return Color.tetradic(this, options)\r\n    }\r\n\r\n\r\n    /**\r\n     * \r\n     * @param {Color} color \r\n     * @returns Color[3]\r\n    */\r\n    static triadic(color) {\r\n        ic(color, Color);\r\n        let hsl = Color.toHsl(color);\r\n        let h = hsl.h,\r\n            s = hsl.s,\r\n            l = hsl.l;\r\n        return [\r\n            color, \r\n            Color.fromHsl(shift(h, 120), s, l),\r\n            Color.fromHsl(shift(h, 240), s, l)\r\n        ]\r\n    }\r\n\r\n    triadic() {\r\n        return Color.triadic(this)\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param {Color} color \r\n     * @param {Object} options\r\n     * @returns Color[3]\r\n    */\r\n    static analogous(color, options) {\r\n        ic(color, Color);\r\n        let hsl = Color.toHsl(color);\r\n        let angle = oc(options).angle;\r\n        let h = hsl.h,\r\n            s = hsl.s,\r\n            l = hsl.l;\r\n        return [\r\n            color, \r\n            Color.fromHsl(shift(h, -angle), s, l),\r\n            Color.fromHsl(shift(h, +angle), s, l)\r\n        ]\r\n    }\r\n\r\n    analogous(options) {\r\n        return Color.analogous(this, options)\r\n    }\r\n\r\n    static materialPalette(color, options) {\r\n        var opt = oc(options);\r\n        var baseLight = opt.baseLight;\r\n        var baseDark = opt.baseDark === \"self\" || !opt.baseDark ? this.multiply(color, color) : opt.baseDark;\r\n\r\n        return {\r\n            \"50\":  Color.mix(baseLight, color, 10),\r\n            \"100\": Color.mix(baseLight, color, 30),\r\n            \"200\": Color.mix(baseLight, color, 50),\r\n            \"300\": Color.mix(baseLight, color, 70),\r\n            \"400\": Color.mix(baseLight, color, 85),\r\n            \"500\": Color.mix(baseLight, color, 100),\r\n            \"600\": Color.mix(baseDark, color, 92),\r\n            \"700\": Color.mix(baseDark, color, 83),\r\n            \"800\": Color.mix(baseDark, color, 74),\r\n            \"900\": Color.mix(baseDark, color, 65),\r\n\r\n            \"A100\": Color.lighten(Color.saturate(Color.mix(baseDark, color, 15), 80), 65),\r\n            \"A200\": Color.lighten(Color.saturate(Color.mix(baseDark, color, 15), 80), 55),\r\n            \"A400\": Color.lighten(Color.saturate(Color.mix(baseLight, color, 100), 55), 10),\r\n            \"A700\": Color.lighten(Color.saturate(Color.mix(baseDark, color, 83), 65), 10)\r\n        };\r\n    }\r\n\r\n    materialPalette(options) {\r\n        return Color.materialPalette(this, options);\r\n    }\r\n\r\n\r\n        \r\n    /**\r\n     * \r\n     * @param {Color} color \r\n     * @param {string} name \r\n     * @param {object} options \r\n     * @returns \r\n     */\r\n    static createScheme(color, name, options){\r\n        switch (name.toLowerCase()) {\r\n            case \"analogous\":\r\n            case \"analog\": return Color.analogous(color);\r\n\r\n            case \"triadic\":\r\n            case \"triad\": return Color.triadic(color);\r\n\r\n            case \"tetradic\":\r\n            case \"tetra\": return Color.tetradic(color);\r\n\r\n            case \"monochromatic\":\r\n            case \"monochrome\":\r\n            case \"mono\": return Color.monochromatic(color, options);\r\n\r\n            case \"complementary\":\r\n            case \"complement\":\r\n            case \"comp\": return Color.complementary(color);\r\n\r\n            case \"double-complementary\":\r\n            case \"double-complement\":\r\n            case \"double\": return Color.doubleComplementary(color);\r\n\r\n            case \"split-complementary\":\r\n            case \"split-complement\":\r\n            case \"split\": return Color.splitComplementary(color);\r\n\r\n            case \"square\": return Color.square(color);\r\n            case \"material\": return Color.materialPalette(color);\r\n        }\r\n    }\r\n\r\n    //#endregion\r\n\r\n    /**\r\n     * \r\n     * @param {Number} r \r\n     * @param {Number} g \r\n     * @param {Number} b \r\n     */\r\n    constructor(r, g, b) {\r\n        if( !(( 0 <= r && r <= 255 ) && ( 0 <= g && g <= 255 ) && ( 0 <= b && b <= 255 )) ) throw new Error('Color values out of bounds (0 - 255)')\r\n        this.#red = nc(tc(r, \"number\"));\r\n        this.#green = nc(tc(g, \"number\"));\r\n        this.#blue = nc(tc(b, \"number\"));\r\n        this.alpha = 1;\r\n\r\n    }\r\n\r\n    //#region mix methods\r\n    /**\r\n     * \r\n     * @param {Color} color \r\n     * @param {Number} amount \r\n     * @returns Color\r\n     */\r\n    static saturate(color, amount) {\r\n        oc(color, Color);\r\n        tc(amount, \"number\")\r\n        let hsl = color.toHsl();\r\n        let h = hsl.h;\r\n        let s = clmp(hsl.s + amount, 100, 0);\r\n        let l = hsl.l;\r\n        return Color.fromHsl(h, s, l);\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param {Number} amount \r\n     * @returns Color \r\n     */\r\n    saturate(amount) {\r\n        return Color.saturate(this, amount);\r\n    }\r\n    /**\r\n     * \r\n     * @param {Color} color \r\n     * @param {Number} amount \r\n     * @returns Color\r\n     */\r\n    static desaturate(color, amount) {\r\n        oc(color, Color);\r\n        tc(amount, \"number\")\r\n        let hsl = color.toHsl();\r\n        let h = hsl.h;\r\n        let s = clmp(hsl.s - amount, 100, 0);\r\n        let l = hsl.l;\r\n        return Color.fromHsl(h, s, l);\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param {Number} amount \r\n     * @returns Color \r\n     */\r\n    desaturate(amount) {\r\n        return Color.desaturate(this, amount);\r\n    }\r\n    \r\n    /**\r\n     * \r\n     * @param {Color} color \r\n     * @returns Color \r\n     */\r\n    static grayscale(color) {\r\n        return Color.desaturate(color, 100);\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @returns Color \r\n     */\r\n    grayscale() {\r\n        return Color.greyscale(this, 100);\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param {Color} color \r\n     * @returns Color \r\n     */\r\n    static greyscale(color) {\r\n        return Color.desaturate(color, 100);\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @returns Color \r\n     */\r\n    greyscale() {\r\n        return Color.greyscale(this, 100);\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param {Color} color \r\n     * @param {Number} amount\r\n     * @returns Color \r\n     */\r\n    static lighten(color, amount) {\r\n        ic(color, Color)\r\n        tc(amount, \"number\")\r\n\r\n        const hsl = color.toHsl();\r\n        let h = hsl.h;\r\n        let s = hsl.s;\r\n        let l = clmp(hsl.l + amount, 100, 0);\r\n\r\n        return Color.fromHsl(h, s, l);\r\n    }\r\n    /** @param {Number} amount */\r\n    lighten(amount) { return Color.lighten(this, amount) }\r\n    \r\n    /**\r\n     * \r\n     * @param {Color} color \r\n     * @param {Number} amount\r\n     * @returns Color \r\n     */\r\n    static darken(color, amount) {\r\n        return Color.lighten(color, -amount);\r\n    }\r\n    /** @param { Number } amount */\r\n    darken(amount) { return Color.darken(this, amount) }\r\n\r\n\r\n    /**\r\n     * \r\n     * @param {Color} color \r\n     * @param {Number} amount \r\n     * @returns Color \r\n     */\r\n    static brighten(color, amount) {\r\n        let rgb = color.toRgb();\r\n        \r\n        rgb.r = Math.max(0, Math.min(255, rgb.r - Math.round(255 * - (amount / 100))));\r\n        rgb.g = Math.max(0, Math.min(255, rgb.g - Math.round(255 * - (amount / 100))));\r\n        rgb.b = Math.max(0, Math.min(255, rgb.b - Math.round(255 * - (amount / 100))));\r\n\r\n        return new Color(rgb.r, rgb.g, rgb.b);\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param {Number} amount \r\n     * @returns Color\r\n     */\r\n    brighten(amount) {\r\n        return Color.brighten(this, amount);\r\n    }\r\n\r\n\r\n\r\n    /** @param {Color} color @param {Number} angle  */\r\n    static shiftHue(color, angle) {\r\n        ic(color, Color);\r\n        tc(angle, Number)\r\n        let { h, s, l } = color.toHsl();\r\n        h = shift(h, angle)\r\n        return Color.fromHsl(h, s, l);\r\n    }\r\n    /** @param {Number} angle */\r\n    shiftHue(angle) { return Color.shiftHue(this, angle) }\r\n    \r\n    \r\n\r\n    /** @param {Color} color1 @param {Color} color2  */\r\n    static multiply(color1, color2) {\r\n        ic(color1, Color);\r\n        ic(color2, Color);\r\n        let { r1, g1, b1 } = color1.toRgb();\r\n        let { r2, g2, b2 } = color2.toRgb();\r\n\r\n        return Color.fromRgb((r1 * r2) / 255, (g1 * g2) / 255, (b1 * b2) / 255);\r\n    }\r\n    /** @param {Number} angle */\r\n    multiply(color) { return Color.multiply(this, color) }\r\n    \r\n\r\n    /** @param {Color} color1 @param {Color} color2 @param {Number} amount */\r\n    static mix(color1, color2, amount=50) {\r\n        ic(color1, Color);\r\n        ic(color1, Color);\r\n        tc(amount, \"number\")\r\n  \r\n        const rgb1 = color1.toRgb();\r\n        const rgb2 = color2.toRgb();\r\n\r\n        const p = clmp(amount, 100, 0) / 100;\r\n\r\n        const r = Math.round(((rgb2.r - rgb1.r) * p) + rgb1.r);\r\n        const g = Math.round(((rgb2.g - rgb1.g) * p) + rgb1.g);\r\n        const b = Math.round(((rgb2.b - rgb1.b) * p) + rgb1.b);\r\n\r\n        return Color.fromRgb(r, g, b);\r\n    }\r\n    \r\n\r\n    /** @param {Color} color1 @param {Color} color2 @param {Number} amount */\r\n    mix(color, amount) {\r\n        return Color.mix(this, color, amount);\r\n    }\r\n\r\n    /** @param {Color} color1 @param {Color} color2 @param {Number} amount */\r\n    static lerp(color1, color2, t=0.5) {\r\n        tc(t, \"number\");\r\n        ic(color1, Color);\r\n        ic(color2, Color);\r\n        t = clmp(t, 1, 0);\r\n        let rgb1 = color1.toRgb();\r\n        let rgb2 = color2.toRgb();\r\n        \r\n        let r1 = rgb1.r / 255;\r\n        let g1 = rgb1.g / 255;\r\n        let b1 = rgb1.b / 255;\r\n        \r\n        let r2 = rgb2.r / 255;\r\n        let g2 = rgb2.g / 255;\r\n        let b2 = rgb2.b / 255;\r\n\r\n        return Color.fromRgb(\r\n            (r1 + (r2 - r1) * t) * 255,\r\n            (g1 + (g2 - g1) * t) * 255,\r\n            (b1 + (b2 - b1) * t) * 255\r\n        );\r\n    }\r\n\r\n    /** @param {Color} color @param {Number} amount */\r\n    lerp(color, t) {\r\n        return Color.lerp(this, color, t);\r\n    }\r\n\r\n\r\n    /**@param {Color} color1 @param {Color} color2 */\r\n    static add(color1, color2) {\r\n        ic(color1, Color);\r\n        ic(color2, Color);\r\n        \r\n        let rgb1 = color1.toRgb();\r\n        let rgb2 = color2.toRgb();\r\n        \r\n        let r1 = rgb1.r;\r\n        let g1 = rgb1.g;\r\n        let b1 = rgb1.b;\r\n        \r\n        let r2 = rgb2.r;\r\n        let g2 = rgb2.g;\r\n        let b2 = rgb2.b;\r\n\r\n        return Color.fromRgb(\r\n            Math.round((r1 + r2) / 2),\r\n            Math.round((g1 + g2) / 2),\r\n            Math.round((b1 + b2) / 2),\r\n        )\r\n\r\n    }\r\n    \r\n    /** @param {Color} color */\r\n    add(color)  {\r\n        return Color.add(this, color);\r\n    }\r\n    //#endregion\r\n\r\n\r\n    //#region from methods\r\n\r\n    /**\r\n     * \r\n     * @param {string} hex\r\n     * @returns Color\r\n     */\r\n    static fromHex(hex) {\r\n            if(!hex.match(/^#?(?:[0-9a-fA-F]{3}){1,2}$/i)) throw new Error('Invalid Hex code: \"' + hex + '\"');\r\n            let r=\"0x00\";\r\n            let g=\"0x00\";\r\n            let b=\"0x00\";\r\n            if(hex.length == 4)\r\n            {\r\n                r = \"0x\" + hex[1] + hex[1];\r\n                g = \"0x\" + hex[2] + hex[2];\r\n                b = \"0x\" + hex[3] + hex[3];\r\n            }\r\n            else if (hex.length == 3) \r\n            {\r\n                r = \"0x\" + hex[0] + hex[0];\r\n                g = \"0x\" + hex[1] + hex[1];\r\n                b = \"0x\" + hex[2] + hex[2];\r\n            }\r\n            else if(hex.length == 7)\r\n            {\r\n                r = \"0x\" + hex[1] + hex[2];\r\n                g = \"0x\" + hex[3] + hex[4];\r\n                b = \"0x\" + hex[5] + hex[6];\r\n            }\r\n            else if(hex.length == 6)\r\n            {\r\n                r = \"0x\" + hex[0] + hex[1];\r\n                g = \"0x\" + hex[2] + hex[3];\r\n                b = \"0x\" + hex[4] + hex[5];\r\n            }\r\n        \r\n            const color = new Color( parseInt(r, 16), parseInt(g, 16), parseInt(b, 16) );            \r\n            return color;\r\n\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param {Number} r \r\n     * @param {Number} g \r\n     * @param {Number} b \r\n     * @returns Color\r\n     */\r\n    static fromRgb(r, g, b) {\r\n        return new Color(r, g, b)\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param {Number} hue \r\n     * @param {Number} sat \r\n     * @param {Number} lum \r\n     * @returns Color\r\n     */\r\n    static fromHsl(hue, sat, lum) {\r\n        hue = tc(hue, \"number\")\r\n        sat = tc(sat, \"number\")\r\n        lum = tc(lum, \"number\")\r\n        if(!( 0 <= hue && hue <= 360 )) throw new Error('HSL color values out of range, hue (0 - 360)')\r\n        if(!( 0 <= sat && sat <= 100 )) throw new Error('HSL color values out of range, sat (0 - 100)')\r\n        if(!( 0 <= lum && lum <= 100 )) throw new Error('HSL color values out of range, lum (0 - 100)')\r\n\r\n        sat /= 100;\r\n        lum /= 100;\r\n\r\n        let c = (1 - Math.abs(2 * lum - 1)) * sat;\r\n        let x = c * (1 - Math.abs((hue / 60) % 2 - 1));\r\n        let m = lum - c/2;\r\n        let r=0;\r\n        let g=0;\r\n        let b=0;\r\n\r\n        if (0 <= hue && hue < 60) {\r\n            r = c; g = x; b = 0;\r\n        } else if (60 <= hue && hue < 120) {\r\n            r = x; g = c; b = 0;\r\n        } else if (120 <= hue && hue < 180) {\r\n            r = 0; g = c; b = x;\r\n        } else if (180 <= hue && hue < 240) {\r\n            r = 0; g = x; b = c;\r\n        } else if (240 <= hue && hue < 300) {\r\n            r = x; g = 0; b = c;\r\n        } else if (300 <= hue && hue <= 360) {\r\n            r = c; g = 0; b = x;\r\n        }\r\n        \r\n        const red   = Math.round((r + m) * 255);\r\n        const green = Math.round((g + m) * 255);\r\n        const blue  = Math.round((b + m) * 255);\r\n\r\n        const color = new Color(red, green, blue);\r\n        \r\n        return color;\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param {Number} hue \r\n     * @param {Number} sat \r\n     * @param {Number} lum \r\n     * @returns Color\r\n     */\r\n    static fromHsv(hue, sat, val) {\r\n        hue = tc(hue, \"number\")\r\n        sat = tc(sat, \"number\")\r\n        val = tc(val, \"number\")\r\n        if(!( 0 <= hue && hue <= 360 )) throw new Error('HSL color values out of range, hue (0 - 360)')\r\n        if(!( 0 <= sat && sat <= 100 )) throw new Error('HSL color values out of range, sat (0 - 100)')\r\n        if(!( 0 <= val && val <= 100 )) throw new Error('HSL color values out of range, lum (0 - 100)')\r\n\r\n        sat /= 100;\r\n        val /= 100;\r\n        let c = val * sat;\r\n        let x = c * ( 1 - Math.abs( (hue/60) % 2 - 1 ) );\r\n        let m = val - c;\r\n\r\n        let r=0;\r\n        let g=0;\r\n        let b=0;\r\n\r\n        if(0 <= hue  && hue  < 60)\r\n        {\r\n            r = c;\r\n            g = x;\r\n            b = 0;\r\n        }\r\n        \r\n        else if(60 <= hue  && hue < 120)\r\n        {\r\n            r = x;\r\n            g = c;\r\n            b = 0;\r\n        }\r\n        \r\n        else if(120 <= hue  && hue  < 180)\r\n        {\r\n            r = 0;\r\n            g = c;\r\n            b = x;\r\n        }\r\n        \r\n        else if(180 <= hue  && hue  < 240)\r\n        {\r\n            r = 0;\r\n            g = x;\r\n            b = c;\r\n        }\r\n        \r\n        else if(240 <= hue  && hue  < 300)\r\n        {\r\n            r = x;\r\n            g = 0;\r\n            b = c;\r\n        }\r\n        \r\n        else if(300 <= hue  && hue  <= 360)\r\n        {\r\n            r = c;\r\n            g = 0;\r\n            b = x;\r\n        }\r\n\r\n        const red   = ((r + m) * 255);\r\n        const green = ((g + m) * 255);\r\n        const blue  = ((b + m) * 255);\r\n        \r\n        const color = new Color(red, green, blue);\r\n\r\n        return color;\r\n\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param {string} colorString \r\n     * @returns Color \r\n     */\r\n    static fromCssString(colorString) {\r\n        tc(colorString, \"string\")\r\n        var ctx = document.createElement(\"canvas\").getContext(\"2d\");\r\n        ctx.fillStyle = colorString;\r\n        const value = ctx.fillStyle;\r\n        if(!value) throw new Error(\"Invalid Color string\");\r\n        return Color.fromHex(value);\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param {string} colorName \r\n     * @returns {ThisType} \r\n     */\r\n    static fromName(colorName) {\r\n        colorName = tc(colorName, \"string\")\r\n        const color =  this.Colors[colorName.toUpperCase()];\r\n        if(!color) throw new Error('Invalid Color name');\r\n        return color;\r\n    }\r\n\r\n    //#endregion\r\n\r\n    //#region to methods\r\n\r\n    /**\r\n     * @typedef {Object} hsl\r\n     * @property {Number} h - hue\r\n     * @property {Number} s - saturation\r\n     * @property {Number} l - luminance\r\n     */\r\n    /**\r\n     * @param {Color} color \r\n     * @returns string\r\n     */\r\n    static toHex(color) {\r\n        color = ic(color, Color);\r\n        let r = Math.round(color.#red).toString(16);\r\n        let g = Math.round(color.#green).toString(16);\r\n        let b = Math.round(color.#blue).toString(16);\r\n\r\n        if (r.length == 1){\r\n            r = \"0\" + r;\r\n        }\r\n        if (g.length == 1){\r\n            g = \"0\" + g;\r\n        }\r\n        if (b.length == 1){\r\n            b = \"0\" + b;   \r\n        }\r\n\r\n\r\n        return \"#\" + r + g + b;\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param {Color} color\r\n     * @returns Number[] \r\n     */\r\n    static toHsl(color) {\r\n        color = ic(color, Color);\r\n\r\n        let h = 0;\r\n        let s = 0;\r\n        let l = 0;\r\n\r\n        let r = color.#red / 255;\r\n        let g = color.#green / 255;\r\n        let b = color.#blue / 255;\r\n\r\n        let cmin = Math.min(Math.min(r, g), b);\r\n        let cmax = Math.max(Math.max(r, g), b);\r\n        let delta = cmax - cmin;\r\n\r\n        if (delta === 0)\r\n        {\r\n            h = 0;\r\n        }\r\n        \r\n        else if (cmax === r)\r\n        {\r\n            h = ((g - b) / delta) % 6;\r\n        }\r\n\r\n        else if (cmax === g)\r\n        {\r\n            h = (b - r) / delta + 2;\r\n        }\r\n\r\n        else\r\n        {\r\n            h = (r - g) / delta + 4;\r\n        }\r\n  \r\n        h = Math.round(h * 60);\r\n  \r\n        if (h < 0)\r\n        {\r\n            h += 360;  \r\n        }\r\n\r\n        l = (cmax + cmin) / 2;\r\n        s = delta === 0 ? 0 : delta / (1 - Math.abs(2 * l - 1));\r\n        s = parseFloat(Math.abs(s * 100));\r\n        l = parseFloat(Math.abs(l * 100));\r\n\r\n        return { h:nc(h), s:nc(s), l:nc(l) };\r\n\r\n    }\r\n    \r\n\r\n\r\n    /**\r\n     * @typedef {Object} hsv\r\n     * @property {Number} h - hue\r\n     * @property {Number} s - saturation\r\n     * @property {Number} v - value\r\n     */\r\n    /**\r\n     * @param {Color} color \r\n     * @returns { hsv }\r\n     */\r\n    static toHsv(color) {\r\n        let h = 0;\r\n        let s = 0;\r\n        let v = 0;\r\n\r\n        let r = color.#red / 255;\r\n        let g = color.#green / 255;\r\n        let b = color.#blue / 255;\r\n\r\n        let cmin = Math.min(Math.min(r, g), b);\r\n        let cmax = Math.max(Math.max(r, g), b);\r\n        let delta = cmax - cmin;\r\n\r\n        if (delta === 0)\r\n        {\r\n            h = 0;\r\n        }\r\n        \r\n        else if (cmax === r)\r\n        {\r\n            h = ((g - b) / delta) % 6;\r\n        }\r\n\r\n        else if (cmax === g)\r\n        {\r\n            h = (b - r) / delta + 2;\r\n        }\r\n\r\n        else\r\n        {\r\n            h = (r - g) / delta + 4;\r\n        }\r\n  \r\n        h = Math.round(h * 60);\r\n  \r\n        if (h < 0)\r\n        {\r\n            h += 360;  \r\n        }\r\n\r\n        if(cmax !== 0) \r\n        {\r\n            s = (delta/cmax) * 100;\r\n        }\r\n\r\n        v = cmax * 100;\r\n        return { h:nc(h), s:nc(s), v:nc(v) }; \r\n\r\n    }\r\n    \r\n    \r\n    /**\r\n     * @typedef {Object} rgb\r\n     * @property {Number} r - red\r\n     * @property {Number} g - green\r\n     * @property {Number} b - blue\r\n    */\r\n    /**\r\n     * \r\n     * @param {Color} color \r\n     * @returns { rgb }\r\n     */\r\n    static toRgb(color) {\r\n        ic(color, Color);\r\n        return { r: color.#red, g: color.#green, b: color.#blue };\r\n    }\r\n    \r\n    /**\r\n     * @typedef {Object} cmyk\r\n     * @property {Number} c - cyan\r\n     * @property {Number} m - magenta\r\n     * @property {Number} y - yellow\r\n     * @property {Number} k - black\r\n    */\r\n    /**\r\n     * \r\n     * @param {Color} color \r\n     * @returns { cmyk }\r\n     */\r\n    static toCmyk(color) {\r\n        ic(color, Color);\r\n        let { r, g, b } = color.toRgb();\r\n        let c = 1 - (r / 255);\r\n        let m = 1 - (g / 255);\r\n        let y = 1 - (b / 255);\r\n        let k = Math.min(c, Math.min(m, y));\r\n        \r\n        c = (c - k) / (1 - k);\r\n        m = (m - k) / (1 - k);\r\n        y = (y - k) / (1 - k);\r\n        \r\n        c = nc(Math.round(c * 10000) / 100);\r\n        m = nc(Math.round(m * 10000) / 100);\r\n        y = nc(Math.round(y * 10000) / 100);\r\n        k = nc(Math.round(k * 10000) / 100);\r\n\r\n        return { c, m, y, k };\r\n    }\r\n\r\n    //#endregion\r\n\r\n    //#region to methods (instance)\r\n\r\n    /**\r\n     * @typedef {Object} hsl\r\n     * @property {Number} h - hue\r\n     * @property {Number} s - saturation\r\n     * @property {Number} l - luminance\r\n     */\r\n    /** @returns { hsl } */\r\n    toHsl() {\r\n        return Color.toHsl(this);\r\n    }\r\n\r\n    /**\r\n     * @typedef {Object} hsv\r\n     * @property {Number} h - hue\r\n     * @property {Number} s - saturation\r\n     * @property {Number} v - value\r\n     */\r\n    /** @returns { hsv } */\r\n    toHsv() {\r\n        return Color.toHsv(this);\r\n    }\r\n\r\n    /** @returns string */\r\n    toHex() {\r\n        return Color.toHex(this);\r\n    }\r\n\r\n    /**\r\n     * @returns {rgb}\r\n     */\r\n    toRgb() {\r\n        return Color.toRgb(this);\r\n    }\r\n\r\n    /**\r\n     * @returns {cmyk}\r\n     */\r\n    toCmyk() {\r\n        return Color.toCmyk(this);\r\n    }\r\n\r\n    \r\n\r\n    //#endregion\r\n\r\n    static random() {\r\n        const r = Math.floor(Math.random() * 255)\r\n        const g = Math.floor(Math.random() * 255) \r\n        const b = Math.floor(Math.random() * 255)\r\n        return new Color(r,g,b)\r\n    }\r\n\r\n    toString(type=\"hex\") {\r\n        tc(type, \"string\");\r\n        const rgb = this.toRgb();\r\n        const hsl = this.toHsl();\r\n        switch(type.toLowerCase()) {\r\n            case \"hex\":\r\n                return this.toHex();\r\n                \r\n            case \"hexa\":\r\n                let a = Math.round(this.alpha * 255).toString(16);\r\n                if(a.length === 1) { a = \"0\" + a; };\r\n                return this.toHex() + a;\r\n                \r\n            case \"rgb\":\r\n                return `rgb(${Math.round(rgb.r)}, ${Math.round(rgb.g)}, ${Math.round(rgb.b)})` ;\r\n                \r\n                \r\n            case \"rgba\":\r\n                return `rgba(${Math.round(rgb.r)}, ${Math.round(rgb.g)}, ${Math.round(rgb.b)}, ${this.alpha})` ;\r\n                \r\n            case \"hsl\":\r\n                return `hsl(${Math.round(hsl.h)}, ${Math.round(hsl.s)}%, ${Math.round(hsl.l)}%)` ;\r\n                \r\n                \r\n            case \"hsla\":\r\n                return `hsla(${Math.round(hsl.h)}, ${Math.round(hsl.s)}%, ${Math.round(hsl.l)}%, ${this.alpha})` ;\r\n                \r\n            case \"hsv\":\r\n                const hsv = this.toHsv();\r\n                return `hsv(${Math.round(hsv.h)}, ${Math.round(hsv.s)}%, ${Math.round(hsv.v)}%)` ;\r\n        \r\n            case \"cmyk\":\r\n                const cmyk = this.toCmyk();\r\n                return `cmyk(${Math.round(cmyk.c)}%, ${Math.round(cmyk.m)}%, ${Math.round(cmyk.y)}%, ${Math.round(cmyk.k)}%)` ;\r\n            \r\n            default:\r\n                \"Can't convert Color to given string type\";\r\n        \r\n        }\r\n    }\r\n\r\n    valueOf() {\r\n        return parseInt(\"0x\" + this.toHex().slice(1));\r\n    }\r\n\r\n}\r\n\r\n\r\nexport default Color;\r\n// module.exports = Color;","module.exports = require(\"vscode\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import * as vscode from 'vscode';\nimport Color from './color';\nimport * as parse from 'parse-css-color';\n\ninterface Match {\n\tcolor: vscode.Color;\n\ttype: string;\n\tlength: number;\n\trange: vscode.Range;\n}\n\nfunction parseColorString(color: string) {\n\t\n\ttry {\n\t\tconst p = parse(color);\n\t\tif(!p) { throw new Error('invalid color string'); }\n\t\tif(p.type === \"rgb\") {\n\t\t\tconst r = p.values[0] as number;\n\t\t\tconst g = p.values[1] as number;\n\t\t\tconst b = p.values[2] as number;\n\t\t\tconst a = p.alpha as number;\n\t\n\t\t\treturn new vscode.Color(r/255, g/255, b/255, a);\n\t\t} else {\n\t\t\tconst h = p.values[0] as number;\n\t\t\tconst s = p.values[1] as number;\n\t\t\tconst l = p.values[2] as number;\n\t\t\tconst a = p.alpha as number;\n\t\t\tconst { r, g, b } = Color.fromHsl(h, s, l).toRgb();\n\n\t\t\treturn new vscode.Color(r/255, g/255, b/255, a);\n\t\t}\n\n\t} catch(e) {\n\t\tconsole.log(e);\n\t\treturn null;\n\t}\n\n}\n\n\nfunction getPos(text: string, index: number): vscode.Position {\n\t\n\tconst nMatches = Array.from(text.slice(0, index).matchAll(/\\n/g));\n\n\tconst lineNumber = nMatches.length;\n\n\tconst characterIndex = index - nMatches[lineNumber-1].index;\n\t\n\n\treturn new vscode.Position(\n\t\tlineNumber,\n\t\tcharacterIndex - 1\n\t);\n}\n\n\nclass Matcher {\n\t\n\t\n\tstatic getMatches(text: string): Match[] {\n\t\tconst matches = text.matchAll(/(#(?:[\\da-f]{3,4}){2}|rgb\\((?:\\d{1,3},\\s*){2}\\d{1,3}\\)|rgba\\((?:\\d{1,3},\\s*){3}\\d*\\.?\\d+\\)|hsl\\(\\d{1,3}(?:,\\s*\\d{1,3}%){2}\\)|hsla\\(\\d{1,3}(?:,\\s*\\d{1,3}%){2},\\s*\\d*\\.?\\d+\\))/gi);\n\t\treturn Array.from(matches).map(match => {\n\t\t\tconst t = match[0];\n\t\t\tconst length = t.length;\n\t\t\tlet type: string;\n\t\t\t\tif(t.startsWith('hsl(')) { type = \"hsl\"; }\n\t\t\t\telse if(t.startsWith('hsla(')) { type = \"hsla\"; }\n\t\t\t\telse if(t.startsWith('rgb(')) { type = \"rgb\"; }\n\t\t\t\telse if(t.startsWith('rgba(')) { type = \"rgba\"; }\n\t\t\t\telse if(t.startsWith('#')) { type = \"hex\"; }\n\n\t\t\tconst range = new vscode.Range(\n\t\t\t\tgetPos(text, match.index),\n\t\t\t\tgetPos(text, match.index + t.length)\n\t\t\t);\n\n\t\t\tconst col = parseColorString(t); \n\t\t\t\n\n\t\t\tif(col) {\n\t\t\t\treturn {\n\t\t\t\t\tcolor: col,\n\t\t\t\t\ttype,\n\t\t\t\t\tlength,\n\t\t\t\t\trange\n\t\t\t\t} as Match;\n\t\t\t}\n\t\t});\n\n\n\t\t\n\t}\n}\n\n\n\nclass Picker {\n\n\tconstructor() {\n\t\tlet subscriptions: vscode.Disposable[] = [];\n        vscode.workspace.onDidChangeTextDocument(this._onDidChangeTextDocument, this, subscriptions);\n        vscode.workspace.onDidChangeConfiguration(this._onDidChangeConfiguration, this, subscriptions);\n\t\tthis.register();\n\t}\n\n\n\tprivate get languages() {\n\t\treturn vscode.workspace.getConfiguration('vscode-color-picker').get('languages') as Array<string>;\n\t}\n\n    private _onDidChangeTextDocument(e: vscode.TextDocumentChangeEvent) {\n\t\tconst editor = vscode.window.activeTextEditor;\n\t\tconst document = e.document;\n\t\tconst text = document.getText();\n    }\n\n\tprivate _onDidChangeConfiguration() {\n\n\t}\n\n\tprivate register() {\n\t\tthis.languages.forEach(language => {\n\t\t\tvscode.languages.registerColorProvider(language, {\n\n\t\t\t\tprovideDocumentColors(document: vscode.TextDocument, token: vscode.CancellationToken) {\n\t\t\t\t\t\n\t\t\t\t\tconst matches = Matcher.getMatches(document.getText());\n\t\t\t\t\t\n\t\t\t\t\treturn matches.map((match, i,) =>  new vscode.ColorInformation(\n\t\t\t\t\t\t\tmatch.range,\n\t\t\t\t\t\t\tmatch.color\n\t\t\t\t\t\t));\n\n\t\t\t\t},\n\t\t\t\tprovideColorPresentations(color, context, token) {\n\t\t\t\t\tlet c = Color.fromRgb(color.red * 255, color.green * 255, color.blue * 255);\n\t\t\t\t\tc.alpha = color.alpha;\n\t\t\t\t\tlet hex = c.toString('hex');\n\t\t\t\t\tlet hsl = c.toString('hsl');\n\t\t\t\t\tlet colString = context.document.getText(context.range);\n\t\t\t\t\tlet t = colString;\n\n\n\t\t\t\t\tconst presentationHex = new vscode.ColorPresentation(c.toString('hex'));\n\t\t\t\t\tconst presentationHexa = new vscode.ColorPresentation(c.toString('hexa'));\n\t\t\t\t\tconst presentationHsl = new vscode.ColorPresentation(c.toString('hsl'));\n\t\t\t\t\tconst presentationHsla = new vscode.ColorPresentation(c.toString('hsla'));\n\t\t\t\t\tconst presentationRgb = new vscode.ColorPresentation(c.toString('rgb'));\n\t\t\t\t\tconst presentationRgba = new vscode.ColorPresentation(c.toString('rgba'));\n\n\t\t\t\t\tlet hasAlpha = false;\n\t\t\t\t\tif(t.startsWith('#') && (t.length === 9)) {\n\t\t\t\t\t\thasAlpha = true;\n\t\t\t\t\t}\n\t\t\t\t\tif(t.startsWith('hsla')) {\n\t\t\t\t\t\thasAlpha = true;\n\t\t\t\t\t}\n\t\t\t\t\tif(t.startsWith('rgba')) {\n\t\t\t\t\t\thasAlpha = true;\n\t\t\t\t\t}\n\t\t\t\t\tif(color.alpha !== 1) {\n\t\t\t\t\t\thasAlpha = true;\n\t\t\t\t\t}\n\n\t\t\t\t\tlet withAlpha = [\n\t\t\t\t\t\tpresentationHexa,\n\t\t\t\t\t\tpresentationHsla,\n\t\t\t\t\t\tpresentationRgba\n\t\t\t\t\t];\n\n\t\t\t\t\tlet withoutAlpha = [\n\t\t\t\t\t\tpresentationHex,\n\t\t\t\t\t\tpresentationHsl,\n\t\t\t\t\t\tpresentationRgb\n\t\t\t\t\t];\n\n\n\t\t\t\t\treturn hasAlpha ? withAlpha : withoutAlpha;\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\tdispose() {}\n}\n\n\n\nexport function activate(context: vscode.ExtensionContext) {\n\tconst picker = new Picker();\n\tcontext.subscriptions.push(picker);\n}\n\n// this method is called when your extension is deactivated\nexport function deactivate() {}\n"],"names":["module","exports","nonHexChars","RegExp","validHexSize","hex","options","test","TypeError","alphaFromHex","replace","length","Number","parseInt","slice","repeat","number","red","green","blue","alpha","format","toFixed","hexRe","float","percentage","numberOrPercentage","pattern$1","hsl3Re","pattern$2","hsl4Re","pattern$3","rgb3NumberRe","pattern$4","rgb3PercentageRe","pattern$5","rgb4NumberRe","pattern$6","rgb4PercentageRe","transparentRe","clamp","num","min","max","Math","parseRGB","n","endsWith","parseFloat","round","parsePercentage","parseAlpha","a","getRGB","r","g","b","type","values","map","str","exec","getHEX","hsl","h","s","l","hh","PI","getHSL","rgb","cn","toLowerCase","tc","value","ic","nc","isNaN","oc","angle","results","clmp","undefined","shift","Color","static","BLACK","fromHex","SILVER","GRAY","WHITE","MAROON","RED","PURPLE","FUCHSIA","GREEN","LIME","OLIVE","YELLOW","NAVY","BLUE","TEAL","AQUA","ORANGE","ALICEBLUE","ANTIQUEWHITE","AQUAMARINE","AZURE","BEIGE","BISQUE","BLANCHEDALMOND","BLUEVIOLET","BROWN","BURLYWOOD","CADETBLUE","CHARTREUSE","CHOCOLATE","CORAL","CORNFLOWERBLUE","CORNSILK","CRIMSON","CYAN","DARKBLUE","DARKCYAN","DARKGOLDENROD","DARKGRAY","DARKGREEN","DARKGREY","DARKKHAKI","DARKMAGENTA","DARKOLIVEGREEN","DARKORANGE","DARKORCHID","DARKRED","DARKSALMON","DARKSEAGREEN","DARKSLATEBLUE","DARKSLATEGRAY","DARKSLATEGREY","DARKTURQUOISE","DARKVIOLET","DEEPPINK","DEEPSKYBLUE","DIMGRAY","DIMGREY","DODGERBLUE","FIREBRICK","FLORALWHITE","FORESTGREEN","GAINSBORO","GHOSTWHITE","GOLD","GOLDENROD","GREENYELLOW","GREY","HONEYDEW","HOTPINK","INDIANRED","INDIGO","IVORY","KHAKI","LAVENDER","LAVENDERBLUSH","LAWNGREEN","LEMONCHIFFON","LIGHTBLUE","LIGHTCORAL","LIGHTCYAN","LIGHTGOLDENRODYELLOW","LIGHTGRAY","LIGHTGREEN","LIGHTGREY","LIGHTPINK","LIGHTSALMON","LIGHTSEAGREEN","LIGHTSKYBLUE","LIGHTSLATEGRAY","LIGHTSLATEGREY","LIGHTSTEELBLUE","LIGHTYELLOW","LIMEGREEN","LINEN","MAGENTA","MEDIUMAQUAMARINE","MEDIUMBLUE","MEDIUMORCHID","MEDIUMPURPLE","MEDIUMSEAGREEN","MEDIUMSLATEBLUE","MEDIUMSPRINGGREEN","MEDIUMTURQUOISE","MEDIUMVIOLETRED","MIDNIGHTBLUE","MINTCREAM","MISTYROSE","MOCCASIN","NAVAJOWHITE","OLDLACE","OLIVEDRAB","ORANGERED","ORCHID","PALEGOLDENROD","PALEGREEN","PALETURQUOISE","PALEVIOLETRED","PAPAYAWHIP","PEACHPUFF","PERU","PINK","PLUM","POWDERBLUE","ROSYBROWN","ROYALBLUE","SADDLEBROWN","SALMON","SANDYBROWN","SEAGREEN","SEASHELL","SIENNA","SKYBLUE","SLATEBLUE","SLATEGRAY","SLATEGREY","SNOW","SPRINGGREEN","STEELBLUE","TAN","THISTLE","TOMATO","TURQUOISE","VIOLET","WHEAT","WHITESMOKE","YELLOWGREEN","REBECCAPURPLE","getScheme","name","createScheme","this","color","hsv","toHsv","v","result","mod","push","fromHsv","monochromatic","toHsl","fromHsl","complementary","splitComplementary","doubleComplementary","i","square","tetradic","triadic","analogous","opt","baseLight","baseDark","multiply","mix","lighten","saturate","materialPalette","constructor","Error","amount","desaturate","grayscale","greyscale","darken","toRgb","brighten","shiftHue","color1","color2","r1","g1","b1","r2","g2","b2","fromRgb","rgb1","rgb2","p","t","lerp","add","match","hue","sat","lum","c","abs","x","m","val","colorString","ctx","document","createElement","getContext","fillStyle","colorName","Colors","toUpperCase","toString","cmin","cmax","delta","y","k","toHex","toCmyk","floor","random","cmyk","valueOf","require","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","getter","__esModule","d","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","Symbol","toStringTag","getPos","text","index","nMatches","Array","from","matchAll","lineNumber","characterIndex","vscode","Position","Picker","subscriptions","workspace","onDidChangeTextDocument","_onDidChangeTextDocument","onDidChangeConfiguration","_onDidChangeConfiguration","register","languages","getConfiguration","e","window","activeTextEditor","getText","forEach","language","registerColorProvider","provideDocumentColors","token","matches","startsWith","range","Range","col","parse","console","log","parseColorString","getMatches","ColorInformation","provideColorPresentations","context","presentationHex","ColorPresentation","presentationHexa","presentationHsl","presentationHsla","presentationRgb","presentationRgba","hasAlpha","dispose","picker"],"sourceRoot":""}